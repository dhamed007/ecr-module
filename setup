variable "lifecycle_policy" {
  type = string
  default = <<EOF
{
  "rules": [
    {
      "rulePriority": 1,
      "description": "Expire images older than 30 days",
      "selection": {
        "tagStatus": "any",
        "countType": "sinceImagePushed",
        "countUnit": "days",
        "countNumber": 30
      },
      "action": {
        "type": "expire"
      }
    }
  ]
}
EOF
}
---
 lifecycle_policy {
    policy_text = var.lifecycle_policy
  }

resource "aws_ecr_repository" "main" {
  name = var.name

  lifecycle_policy {
    policy_text = var.lifecycle_policy
  }

resource "aws_ecr_repository" "main" {
  name                 = var.name
  image_tag_mutability = var.image_tag_mutability

  image_scanning_configuration {
    scan_on_push = var.scan_image_on_push
  }

  encryption_configuration {
    encryption_type = var.encryption_type
    kms_key         = var.kms_key
  }

  lifecycle_policy {
    policy_text = var.lifecycle_policy
  }

  tags = merge(
    var.tags,
    tomap({ "Name" = var.name })
  )
}

resource "aws_ecr_repository_policy" "main" {
  count      = local.create_ecr_policy
  repository = aws_ecr_repository.main.name
  policy     = local.ecr_policy
}
