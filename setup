module "ecr_repository" {
  source = "./path/to/ecr-module"  # Path to your ECR module directory

  name                 = var.name
  tags                 = var.tags
  image_tag_mutability = var.image_tag_mutability
  scan_image_on_push   = var.scan_image_on_push
  lifecycle_policy     = var.lifecycle_policy
  encryption_type      = var.encryption_type
  kms_key              = var.kms_key
}

resource "aws_ecr_repository_policy" "main" {
  count      = local.create_ecr_policy
  repository = module.ecr_repository.name

  policy = local.ecr_policy
}

resource "aws_ecr_lifecycle_policy" "main" {
  count      = local.create_lifecycle_policy
  repository = module.ecr_repository.name
  policy     = local.lifecycle_policy
}
---
name                 = "your-ecr-repository-name"
tags                 = {
  Name        = "YourECRRepositoryName"
  Environment = "YourEnvironment"
  # Add more tags as needed
}
image_tag_mutability = "IMMUTABLE"
scan_image_on_push   = true
lifecycle_policy     = <<EOF
{
  "rules": [
    {
      "rulePriority": 1,
      "description": "Expire untagged images older than 30 days",
      "selection": {
        "tagStatus": "untagged",
        "countType": "sinceImagePushed",
        "countUnit": "days",
        "countNumber": 30
      },
      "action": {
        "type": "expire"
      }
    }
  ]
}
EOF
encryption_type = "AES256"
kms_key         = null  # If using KMS encryption, provide the ARN of the KMS key, otherwise leave as null
---
variable "name" {
  description = "ECR Repository Name"
}

variable "tags" {
  type        = map(any)
  description = "(Required) Map of tags to apply to repository"
  default     = {}
}

variable "image_tag_mutability" {
  default     = "IMMUTABLE"
  description = "Image tag immutablity MUTABLE/IMMUTABLE"
}

variable "scan_image_on_push" {
  default     = true
  description = "Scan image for vulnerabilities on push"
}

variable "lifecycle_policy" {
  default     = null
  description = "ECR lifecycle policy (jsonencoded)"
}

variable "encryption_type" {
  description = "(Optional) The encryption type to use for the repository. Valid values are AES256 or KMS. Defaults to AES256"
  default     = "AES256"
}

variable "kms_key" {
  description = "(Optional) The ARN of the KMS key to use when encryption_type is KMS. If not specified, uses the default AWS managed key for ECR"
  default     = null
}

variable "create_ecr_policy" {
  type    = bool
  default = false
}

variable "create_lifecycle_policy" {
  type    = bool
  default = true
}
